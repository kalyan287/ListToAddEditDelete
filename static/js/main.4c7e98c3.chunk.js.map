{"version":3,"sources":["components/Head.jsx","redux/actions.js","components/TodoItem.jsx","components/TodoList.jsx","components/TodoInput.jsx","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["Head","className","ADD_EMP","DELETE_EMP","EDIT_EMP","id","connect","emp","dispatch","useState","editable","setEditable","name","setName","type","value","onChange","e","target","onClick","payload","editEmp","empId","state","empArr","props","map","autoComplete","placeholder","Name","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","emps","store","createStore","newEmps","action","push","filter","index","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c7e98c3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Head() {\r\n    return (\r\n        <div className=\"my-5\">\r\n            <p className=\"expand-lg  bg-dark text-light scrolling p-4\"><strong>List of Employees</strong></p>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Head;","export const ADD_EMP = \"ADD_EMP\";\r\nexport const DELETE_EMP = \"DELETE_EMP\";\r\nexport const EDIT_EMP = \"EDIT_EMP\";\r\n\r\nlet id=101\r\n\r\nexport function addEmp(emp) {\r\n    return {\r\n        type:ADD_EMP,\r\n        payload: {name:emp,id:id++},\r\n    }\r\n}\r\n\r\nexport function deleteEmp(empId) {\r\n    return {\r\n        type:DELETE_EMP,\r\n        payload: empId,\r\n    }\r\n}\r\n\r\nexport function editEmp(emp) {\r\n    return {\r\n        type:EDIT_EMP,\r\n        payload: emp,\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { deleteEmp, editEmp } from '../redux/actions';\r\n\r\nfunction TodoItem({emp,dispatch}) {\r\n    const [editable,setEditable] = useState(false);\r\n    const [name, setName] = useState(emp.name);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row mx-3 align-items-center\">\r\n                <div>#{emp.id}</div>\r\n                <div className=\"col\">\r\n                    {editable? <input className=\"form-control\" type=\"text\" \r\n                        value={name}\r\n                        onChange={\r\n                            (e)=>setName(e.target.value)\r\n                        }\r\n                    />:<h5>{emp.name}</h5>}\r\n                </div>\r\n                <button onClick={()=>{\r\n                    dispatch(editEmp(\r\n                        {\r\n                            ...emp,\r\n                            name:name\r\n                        }));\r\n                    if(editable){\r\n                        setName(emp.name);\r\n                    }\r\n                    setEditable(!editable);}}\r\n                    className=\"btn btn-primary m-2\" >{editable?\"Update\":\"Edit\"}</button>\r\n                <button onClick={()=>dispatch(deleteEmp(emp.id))} className=\"btn btn-danger m-2\" >Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect()(TodoItem);","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <div className=\"my-3\">\r\n            {\r\n                props.empArr.map(emp => {\r\n                    return <TodoItem key={emp.id} emp={emp}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        empArr:state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (TodoList);","import React from 'react';\r\nimport { connect} from 'react-redux';\r\nimport {addEmp} from '../redux/actions'\r\n\r\nfunction TodoInput(props) {\r\n    function handleonClick(){\r\n        let Name=document.getElementById(\"empName\").value\r\n        document.getElementById(\"empName\").value = \"\"\r\n        props.dispatch(addEmp(Name))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"row m-5\">\r\n                <input className=\"col form-control\"type=\"text\" autoComplete=\"off\" id=\"empName\" placeholder=\"Enter Employee name\"/>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleonClick}>Add</button>\r\n            </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default connect()(TodoInput);","import React from 'react';\nimport './App.css';\nimport Head from './components/Head';\nimport TodoList from './components/TodoList';\nimport TodoInput from './components/TodoInput';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App mx-4 my-1\">\n      <Head/>\n      <TodoInput/>\n      <TodoList/> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let emps = []","import {createStore} from 'redux';\r\nimport {reducer} from './reducer';\r\nimport {emps} from './states'\r\n\r\nexport let store = createStore(reducer,emps);\r\n","\r\nimport {ADD_EMP,DELETE_EMP,EDIT_EMP} from './actions';\r\nimport {emps} from './states';\r\n\r\nexport let reducer = (state = emps, action) => {\r\n    let newEmps;\r\n    switch (action.type) {\r\n        case ADD_EMP:\r\n            newEmps = [...state];\r\n            newEmps.push(action.payload);\r\n            return newEmps;\r\n\r\n        case DELETE_EMP:\r\n            newEmps = [...state];\r\n            newEmps = newEmps.filter(emp => emp.id !== action.payload)\r\n            return newEmps;\r\n\r\n        case EDIT_EMP:\r\n            newEmps = [...state];\r\n            let index = 0;\r\n            for(let index=0;index<newEmps.length;index++){\r\n                if(newEmps[index].id === action.payload.id){\r\n                    break;\r\n                }  \r\n            }\r\n            newEmps[index] = action.payload\r\n            return newEmps;\r\n\r\n        default:   \r\n            return state; \r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}